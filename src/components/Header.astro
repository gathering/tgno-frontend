---
import type { NavItem } from "../types";
import { fetchInfoPageByPath } from "../utils";
import HeaderNavigation from "./HeaderNavigation.astro";
import CloseSymbol from "./icons/CloseSymbol.astro";
import HamburgerSymbol from "./icons/HamburgerSymbol.astro";

const getNavigationItems: () => Promise<NavItem[]> = async () => {
  const items = [
    {
      title: "Aktuelt",
      path: "/news",
    },
    {
      title: "Program",
      path: "/schedule",
    },
    {
      title: "Kart",
      path: "/map",
    },
    {
      title: "Om TG",
      path: "/about",
      items: [
        { title: "Bli utstiller", path: "/about/expo" },
        { title: "Bli sponsor", path: "/about/sponsor" },
      ],
    },
    {
      title: "Praktisk",
      path: "/practical",
      items: [
        { title: "Arrangementsregler", path: "/event/rules" },
        { title: "Konstruksjonsregler", path: "/event/construction-rules" },
      ],
    },
    {
      title: "Billetter",
      path: "/tickets",
      items: [
        { title: "Vilk√•r", path: "/tickets/terms-and-conditions" },
        { title: "Arrangementsregler", path: "/event/rules" },
        { title: "Konstruksjonsregler", path: "/event/construction-rules" },
      ],
    },
    {
      title: "Konkurranser",
      items: [
        { title: "Kreative", path: "/competitions/creative" },
        { title: "Esport", path: "/competitions/esport" },
      ],
    },
    { title: "Kontakt oss", path: "/contact" },
  ];

  // This works for a couple of cases, but if we want more items we should probably optimise backend API for navigation generation purposes. And/or use a more advanced frontend caching strategy.
  const practicalPage = await fetchInfoPageByPath({
    path: "/practical",
    apiUrl: import.meta.env.API_URL,
  }).catch((e) => {
    console.error(e.message);
  });

  if (practicalPage?.pages) {
    items
      .find((item) => item.title === "Praktisk")
      ?.items?.unshift(
        ...practicalPage.pages
          .filter(({ show_in_menus }) => !!show_in_menus)
          .map(({ title, url }) => ({
            title,
            path: url,
          })),
      );
  }

  return items;
};

const navigationItems = await getNavigationItems();
---

<script>
  const mobileMenu = document.querySelector(
    "[data-component='header'] [data-part='mobile-menu']",
  );
  const mobileMenuButton = document.querySelector(
    "[data-component='header'] [data-part='mobile-menu-trigger']",
  );

  if (mobileMenuButton && mobileMenu) {
    mobileMenuButton.addEventListener("click", () => {
      const expanded =
        mobileMenuButton.getAttribute("aria-expanded") === "true" || false;

      mobileMenuButton.setAttribute("aria-expanded", String(!expanded));
      mobileMenu.classList.toggle("hidden", expanded);

      const icons = mobileMenuButton.querySelectorAll("svg");
      icons?.[0]?.classList.toggle("hidden", !expanded);
      icons?.[0]?.classList.toggle("block", expanded);
      icons?.[1]?.classList.toggle("hidden", expanded);
      icons?.[1]?.classList.toggle("block", !expanded);
    });
  }
</script>

<header class="flex flex-col-reverse z-[1000] relative" data-component="header">
  <div
    class="flex justify-between items-center py-1 px-5 max-w-7xl mb-8 justify-self-center w-full mx-auto bg-backgroundSecondary sm:rounded-xl sm:mx-5 sm:mt-2 sm:mb-8 sm:w-auto xl:mx-auto xl:w-full"
  >
    <nav class="w-full">
      <div class="relative h-20 flex items-center justify-between">
        <a href="/" class="sm:flex gap-x-4 items-center hidden">
          <img
            src="/tg25/tg25_horizontal_white.svg"
            alt="The Gathering logo"
            width={170}
            class="aspect-thumbnail object-cover"
          />
        </a>
        <a href="/" class="flex gap-x-4 -ml-1 items-center sm:hidden">
          <img
            src="/tg25/tg25_horizontal_white.svg"
            alt="The Gathering logo"
            width={130}
            class="aspect-thumbnail object-cover"
          />
        </a>

        <HeaderNavigation
          navigationItems={navigationItems}
          class="hidden sm:flex w-full space-x-6 space-y-0 justify-end"
          prioritized
        />
        <div class="flex items-center">
          <button
            type="button"
            data-part="mobile-menu-trigger"
            class="relative inline-flex items-center justify-center rounded-md p-2 text-gray-400 hover:bg-gray-700 hover:text-white focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white"
            aria-controls="mobile-menu"
            aria-expanded="false"
          >
            <span class="absolute -inset-0.5"></span>
            <span class="sr-only">Open main menu</span>
            <HamburgerSymbol />
            <CloseSymbol class="hidden" />
          </button>
        </div>
      </div>
      <!-- Mobile menu, show/hide based on menu state. -->
      <div class="hidden" id="mobile-menu" data-part="mobile-menu">
        <HeaderNavigation
          navigationItems={navigationItems}
          class="space-y-3 px-2 pb-3 pt-2 flex flex-col"
          hamburger
        />
      </div>
    </nav>
  </div>
  <aside>
    <span
      class="flex w-full text-white justify-end py-2 px-5 max-w-7xl justify-self-center mx-auto gap-x-3 xl:px-0"
    >
      <span>üóì 16.-20. april<span class="max-sm:hidden"> 2025</span></span>
      <a href="https://maps.app.goo.gl/RN5QTjwpLDaWiswh8" target="_blank"
        >üåç Vikingskipet<span class="max-sm:hidden">, Hamar</span></a
      >
    </span>
  </aside>
</header>

---
// Props for the Box component
interface Props {
  itemCenter?: boolean;
  withMargin?: boolean;
  title?: string;
  titleColor?: string;
  date?: string;
  dateColor?: string;
  text?: string;
  textColor?: string;
  button?: {
    text: string;
    textcolor?: string;
    link: string;
    color?: string;
    border?: boolean;
  };
  secondaryButton?: {
    text: string;
    textcolor?: string;
    link: string;
    color?: string;
    border?: boolean;
  };
  backgroundColor?: string;
}
const {
  itemCenter = false,
  withMargin = true,
  title,
  titleColor = "text-white",
  date,
  dateColor = "text-white",
  text,
  textColor = "text-white",
  button,
  secondaryButton,
  backgroundColor = "bg-white",
} = Astro.props;
const itemCenterProps = itemCenter ? "items-center" : "items-start";
const borderProps = button?.border ? "border-white border" : "";
const buttonTextColor = button?.textcolor ? button.textcolor : "text-black";
const textAlignmentProps = itemCenter ? "text-center" : "";
const marginProps = withMargin ? "m-4" : "";
---

<div
  class={`${backgroundColor} ${marginProps} p-4 rounded-3xl flex flex-col space-y-2 sm:m-auto sm:rounded-2xl`}
>
  {
    title && (
      <div class={`flex flex-col ${itemCenterProps} ${textAlignmentProps}`}>
        <div class="space-y-2">
          <h2 class={`text-2xl font-bold ${titleColor}`}>{title}</h2>
          {date && <p class={`${dateColor}`}>{date}</p>}
          {text && <p class={`${textColor}`}>{text}</p>}
        </div>
        <aside class="mt-6 w-full space-y-2">
          {secondaryButton && (
            <a
              href={secondaryButton.link}
              class={`${buttonTextColor} ${secondaryButton?.color} ${borderProps} w-full mt-6 inline-block px-4 py-2 rounded-full content-center text-center`}
            >
              {secondaryButton.text}
            </a>
          )}
          {button && (
            <a
              href={button.link}
              class={`${buttonTextColor} ${button?.color} ${borderProps} w-full inline-block px-4 py-2 rounded-full content-center text-center`}
            >
              {button.text}
            </a>
          )}
        </aside>
      </div>
    )
  }

  {
    text && !title && (
      <div class="flex items-center justify-between w-full">
        <p class={`${textColor}`}>{text}</p>
        {button && (
          <a
            href={button.link}
            class={`${button?.color} ${borderProps} inline-block text-white px-4 py-2 rounded-full content-center`}
          >
            {button.text}
          </a>
        )}
      </div>
    )
  }
</div>

---
// Props for the Box component
interface Props {
  itemCenter?: boolean;
  title?: string;
  titleColor?: string;
  date?: string;
  dateColor?: string;
  text?: string;
  textColor?: string;
  button?: {
    text: string;
    link: string;
    color?: string;
    border?: boolean;
  };
  backgroundColor?: string;
}
const {
  itemCenter = false,
  title,
  titleColor = "text-white",
  date,
  dateColor = "text-white",
  text,
  textColor = "text-white",
  button,
  backgroundColor = "bg-white",
} = Astro.props;
const itemCenterProps = itemCenter ? "items-center" : "items-start";
const borderProps = button?.border ? "border-white border" : "";
---

<div class={`${backgroundColor} p-4 rounded-xl flex flex-col space-y-2 `}>
  {
    title && (
      <div class={`flex flex-col ${itemCenterProps} space-y-2`}>
        <h2 class={`text-2xl font-bold ${titleColor}`}>{title}</h2>
        {date && <p class={`${dateColor}`}>{date}</p>}
        {text && <p class={`${textColor}`}>{text}</p>}
        {button && (
          <a
            href={button.link}
            class={`${button?.color} ${borderProps} inline-block text-white px-4 py-2 rounded-full content-center`}>
            {button.text}
          </a>
        )}
      </div>
    )
  }

  {
    text && !title && (
      <div class="flex items-center justify-between w-full">
        <p class={`${textColor}`}>{text}</p>
        {button && (
          <a
            href={button.link}
            class={`${button?.color} ${borderProps} inline-block text-white px-4 py-2 rounded-full content-center`}>
            {button.text}
          </a>
        )}
      </div>
    )
  }
</div>

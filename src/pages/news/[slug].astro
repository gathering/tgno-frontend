---
import H1 from "../../components/H1.astro";
import Main from "../../components/Main.astro";
import ContentContainer from "../../components/ContentContainer.astro";
import WideContentContainer from "../../components/WideContentContainer.astro";
import Layout from "../../layouts/Layout.astro";
import { fetchArticleIdBySlug, fetchArticleById } from "../../utils";

const { slug } = Astro.params;

if (!slug) {
  throw new Error("Slug is not defined");
}
const id = await fetchArticleIdBySlug({
  slug,
  api_url: import.meta.env.API_URL,
});

if (!id) {
  throw new Error("Article not found");
}

const article = await fetchArticleById({
  id,
  api_url: import.meta.env.API_URL,
});
---

<Layout
  title=`The Gathering - ${article.title}`
  description=`${article.meta.search_description}`
  seo_title=`${article.meta.seo_title}`
  search_description=`${article.meta.search_description}`
  introText=`${article.intro}`
  type="article"
  image=`${article.main_image?.sizes.large.url}`
>
  <Main>
    <ContentContainer>
      <!-- Article Title -->
      <H1 text=`${article.title}` />
      <!-- Main Image -->
      {
        article.main_image && (
          <img
            src={article.main_image.sizes.large.url}
            srcset={`${article.main_image.sizes.large.url} 500w, ${article.main_image.sizes.extra_large.url} 1000w`}
            alt={article.main_image.alt}
            class="w-auto rounded-3xl mb-5"
          />
        )
      }
      <!-- Display Tags -->
      <aside class="mb-5">
        <p class="text-sm text-gray-600 mb-2">
          {
            article.tags
              .filter((tag) => tag.name !== "NotNews") // Filter out the "NotNews" tag
              .map((tag) => {
                return tag.name
                  .split(" ")
                  .map((word) => word.charAt(0).toUpperCase() + word.slice(1))
                  .join(" ");
              })
              .join(", ")
          }
        </p>
        <!-- Publish Date -->
        <time
          datetime={article.meta.first_published_at}
          class="text-sm text-gray-500 mb-2 block"
        >
          {new Date(article.meta.first_published_at).toLocaleDateString()}
        </time>
        <!-- Author -->
        <table class="">
          <tbody class="text-sm text-gray-500 mb-2 block">
            {
              article.contributors.map((contributor) => (
                <tr>
                  <td class="">{contributor.contribution_type}</td>
                  <td class="">| {contributor.name}</td>
                </tr>
              ))
            }
          </tbody>
        </table>
      </aside>
    </ContentContainer>
    <ContentContainer>
      <!-- Article Content -->
      <div class="prose" set:html={article.body} />
    </ContentContainer>
  </Main>
</Layout>

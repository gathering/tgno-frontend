---
import H1 from "../../components/H1.astro";
import Intro from "../../components/Intro.astro";
import Main from "../../components/Main.astro";
import ContentContainer from "../../components/ContentContainer.astro";
import Layout from "../../layouts/Layout.astro";
import { fetchArticleIdBySlug, fetchArticleById } from "../../utils";

const { slug } = Astro.params;

if (!slug) {
  return Astro.rewrite("/404");
}
const id = await fetchArticleIdBySlug({
  slug,
  api_url: import.meta.env.API_URL,
});

if (!id) {
  return Astro.rewrite("/404");
}

const article = await fetchArticleById({
  id,
  api_url: import.meta.env.API_URL,
});

const jsonLd = {
  "@context": "https://schema.org",
  "@type": "NewsArticle",
  headline: `${article.title}`,
  image: article.main_image?.sizes.large.url
    ? [article.main_image?.sizes.large.url]
    : [],
  datePublished: article.meta.first_published_at,
  author: article.contributors.map((contributor) => ({
    "@type": "Person",
    name: contributor.name,
  })),
};
---

<Layout
  title=`The Gathering - ${article.title}`
  description=`${article.meta.search_description}`
  seo_title=`${article.meta.seo_title}`
  search_description=`${article.meta.search_description}`
  introText=`${article.intro}`
  type="article"
  lang=`${article.meta.locale || "no"}`
  image=`${article.main_image?.sizes.large.url}`
  jsonLd={jsonLd}
>
  <Main>
    <ContentContainer variant="wide">
      <H1 text=`${article.title}` />
      {
        article.main_image && (
          <div class="flex md:max-h-[50vh]">
            <img
              src={article.main_image.sizes.large.url}
              srcset={`${article.main_image.sizes.large.url} 500w, ${article.main_image.sizes.extra_large.url} 1000w`}
              alt={article.main_image.alt}
              class="w-auto rounded-3xl object-cover object-center"
            />
          </div>
        )
      }
    </ContentContainer>
    <ContentContainer variant="narrow">
      <!-- Article Content -->
      <Intro text={article.intro} />
      <div class="prose mb-6" set:html={article.body} />
      <aside
        class="mb-6 p-5 space-y-5 text-sm text-white/70 bg-white/5 rounded"
      >
        <section class="space-y-1">
          <time
            datetime={article.meta.first_published_at}
            class="text-sm text-white"
          >
            Publisert:{" "}
            {
              new Date(article.meta.first_published_at).toLocaleDateString(
                "nb-NO",
                {
                  year: "numeric",
                  month: "long",
                  day: "numeric",
                },
              )
            }
          </time>
          {
            !!article.tags.length ? (
              <p class="text-sm mb-1">
                {article.tags
                  .filter((tag) => tag.name !== "NotNews") // Filter out the "NotNews" tag
                  .map((tag) => {
                    return tag.name
                      .split(" ")
                      .map(
                        (word) => word.charAt(0).toUpperCase() + word.slice(1),
                      )
                      .join(" ");
                  })
                  .join(", ")}
              </p>
            ) : null
          }
        </section>
        {
          !!article.contributors.length ? (
            <section>
              <div class="flex flex-row flex-wrap text-sm">
                {article.contributors.map((contributor) => (
                  <dl class="flex flex-col mb-2 mr-4">
                    <dt class="font-bold text-white">{contributor.name}</dt>
                    <dd class="">{contributor.contribution_type}</dd>
                  </dl>
                ))}
              </div>
            </section>
          ) : null
        }
      </aside>
    </ContentContainer>
  </Main>
</Layout>
